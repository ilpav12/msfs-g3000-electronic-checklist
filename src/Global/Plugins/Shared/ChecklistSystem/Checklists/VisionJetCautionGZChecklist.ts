import { ChecklistItemType, Justification } from "@base/Shared/ChecklistSystem/ChecklistItem";
import { VisionJetChecklist, VisionJetChecklistCategory } from "../Checklist";

export enum VisionJetCautionGZChecklistNames {
  GENERATOR1CURRENTCaution = "GENERATOR 1 CURRENT Caution",
  GENERATOR2CURRENTCaution = "GENERATOR 2 CURRENT Caution",
  GIA1FAILCaution = "GIA 1 FAIL Caution",
  GROUNDIDLEFAILCaution = "GROUND IDLE FAIL Caution",
  HYDRAULICOVERHEATCaution = "HYDRAULIC OVERHEAT Caution",
  IPSBLEEDOVERHEATCaution = "IPS BLEED OVERHEAT Caution",
  IPSENGINLETOFFCaution = "IPS ENG INLET OFF Caution",
  IPSENGINLETONCaution = "IPS ENG INLET ON Caution",
  IPSENGINLETOVERHEATCaution = "IPS ENG INLET OVERHEAT Caution",
  IPSENGINLETUNDERPRESSCaution = "IPS ENG INLET UNDERPRESS Caution",
  IPSFLUIDLOWCaution = "IPS FLUID LOW Caution",
  IPSWINDSHLDTIMERCaution = "IPS WINDSHLD TIMER Caution",
  IPSWINGSTABFAILCaution = "IPS WING/STAB FAIL Caution",
  IPSWINGSTABTEMPLOWCaution = "IPS WING/STAB TEMP LOW Caution",
  LDGGEARFAILCaution = "LDG GEAR FAIL Caution",
  LDGGEARSELECTORFAILCaution = "LDG GEAR SELECTOR FAIL Caution",
  MAINBATTERYFAILCaution = "MAIN BATTERY FAIL Caution",
  MAINBATTERYFAULTCaution = "MAIN BATTERY FAULT Caution",
  MAINBUSVOLTSCaution = "MAIN BUS VOLTS Caution",
  NOADCMODESCaution = "NO ADC MODES Caution",
  NOVERTMODESCaution = "NO VERT MODES Caution",
  OILFILTERBYPASSCaution = "OIL FILTER BYPASS Caution",
  OXYGENOFFCaution = "OXYGEN OFF Caution",
  OXYGENONCaution = "OXYGEN ON Caution",
  OXYGENPASSENGERFAILCaution = "OXYGEN PASSENGER FAIL Caution",
  OXYGENPRESSURELOWCaution = "OXYGEN PRESSURE LOW Caution",
  PARKBRAKECaution = "PARK BRAKE Caution",
  PITCHMETACTIVECaution = "PITCH MET ACTIVE Caution",
  PROBEHEATFAILLCaution = "PROBE HEAT FAIL L Caution",
  PROBEHEATFAILRCaution = "PROBE HEAT FAIL R Caution",
  PROBEHEATOFFCaution = "PROBE HEAT OFF Caution",
  SFDALTMISCOMPARECaution = "SFD ALT MISCOMPARE Caution",
  SFDIASMISCOMPARECaution = "SFD IAS MISCOMPARE Caution",
  SFDPITCHMISCOMPARECaution = "SFD PITCH MISCOMPARE Caution",
  SFDROLLMISCOMPARECaution = "SFD ROLL MISCOMPARE Caution",
  STALLWARNINGFAILCaution = "STALL WARNING FAIL Caution",
  STARTERENGAGEDCaution = "STARTER ENGAGED Caution",
  STICKPUSHERFAILCaution = "STICK PUSHER FAIL Caution",
  TAKEOFFEMERBATCaution = "TAKEOFF EMER BAT Caution",
  TAKEOFFFLAPSCaution = "TAKEOFF FLAPS Caution",
  TAKEOFFTHRUSTCaution = "TAKEOFF THRUST Caution",
  TCVCONTROLFAILCaution = "TCV CONTROL FAIL Caution",
  THROTTLESERVOCaution = "THROTTLE SERVO Caution",
  TT2HEATFAILCaution = "TT2 HEAT FAIL Caution",
  WOWFAILCaution = "WOW FAIL Caution",
  YAWSASSERVOCaution = "YAW SAS SERVO Caution",
}

/** A utility class to generate Vision Jet Caution (G-Z) checklist data. */
export class VisionJetCautionGZChecklists {
  /**
   * Generates the Vision Jet Caution (G-Z) checklist data.
   * @returns An array of Vision Jet Caution (G-Z) checklists.
   **/
  public static getChecklists(): VisionJetChecklist[] {
    return [
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.GENERATOR1CURRENTCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Generator 1 current is low.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. GEN 1 Switch", response: "OFF" },
          { type: ChecklistItemType.Challenge, content: "2. GCU Reset via MFD Controller:", response: null },
          {
            type: ChecklistItemType.Challenge,
            content: "a. From Home, touch Aircraft Systems.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Touch the GCU Reset Button.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Challenge, content: "3. GEN 1 Switch", response: "ON" },
          { type: ChecklistItemType.Subtitle, content: "If GEN 1 resets:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Continue flight.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          {
            type: ChecklistItemType.Subtitle,
            content: "If GEN 1 does not reset (low GEN 1 Current and Main Bus voltage):",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "a. GEN 1 Switch",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Subtitle,
            content: "If flight conditions permit:",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) BAT 1",
            response: "OFF",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content:
              "(2) Land as soon as practicable, avoiding IMC or night flight as able (reduced power redundancy).",
            response: null,
            justification: Justification.Indent2,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.GENERATOR2CURRENTCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Generator 2 current is low.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. GEN 2 Switch", response: "CYCLE" },
          { type: ChecklistItemType.Challenge, content: "2. GEN 2 CB (C3)", response: "CHECK, SET" },
          { type: ChecklistItemType.Subtitle, content: "If GEN 2 resets:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Continue flight.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If GEN 2 does not reset (low GEN 2 current):" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. GEN 2 Switch",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Land as soon as practicable, avoiding IMC or night flight as able (reduced power redundancy).",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(VisionJetCautionGZChecklistNames.GIA1FAILCaution, VisionJetChecklistCategory.CautionGZ, [
        { type: ChecklistItemType.Note, content: "GIA 1 has failed.", justification: Justification.Left },
        {
          type: ChecklistItemType.Challenge,
          content: "1. Avoid stalls, low airspeed, and uncoordinated or abrupt control inputs.",
          response: null,
        },
        { type: ChecklistItemType.Challenge, content: "2. Navigation", response: "SELECT GPS 2 OR NAV 2" },
        { type: ChecklistItemType.Challenge, content: "3. Communication", response: "TUNE AND SELECT COM 2 AS ACTIVE" },
        { type: ChecklistItemType.Challenge, content: "4. CAS Messages", response: "ASSESS AND ACKNOWLEDGE" },
        { type: ChecklistItemType.Challenge, content: "5. Fuel Balance", response: "MAINTAIN" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Fuel Quantity",
          response: "CHECK",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Challenge, content: "6. Flight into icing conditions", response: "AVOID" },
        {
          type: ChecklistItemType.Challenge,
          content: "7. Perform Flaps Inoperative Approach/Landing checklist.",
          response: null,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "8. Perform Alternate Gear Extension checklist.",
          response: null,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "9. CABIN PRESSURE DUMP Button (below 1500 AGL)",
          response: "PRESS",
        },
        { type: ChecklistItemType.Challenge, content: "10. Land as soon as practicable.", response: null },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
      ]),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.GROUNDIDLEFAILCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Ground idle is unavailable.", justification: Justification.Left },
          { type: ChecklistItemType.Subtitle, content: "On ground only:" },
          { type: ChecklistItemType.Challenge, content: "1. Do not dispatch.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.HYDRAULICOVERHEATCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Landing gear hydraulic power pack has overheated.",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Subtitle,
            content: "If HYDRAULIC OVERHEAT Caution CAS is accompanied by LDG GEAR FAIL Caution CAS:",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Refer to LDG GEAR FAIL Caution checklist.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          {
            type: ChecklistItemType.Subtitle,
            content: "If HYDRAULIC OVERHEAT Caution CAS is not accompanied by LDG GEAR FAIL Caution CAS:",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "a. LANDING GEAR HYD CB (B4)",
            response: "PULL",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Wait 2-3 minutes for HYDRAULIC OVERHEAT CAS message to extinguish.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Subtitle,
            content: "If HYDRAULIC OVERHEAT CAS message extinguishes:",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) Perform Alternate Gear Extension checklist, as required.",
            response: null,
            justification: Justification.Indent2,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
          {
            type: ChecklistItemType.Subtitle,
            content: "If HYDRAULIC OVERHEAT CAS message persists, power pack may still be operating continuously:",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) BAT 1",
            response: "OFF",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(2) GEN 1",
            response: "OFF",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(3) Perform Alternate Gear Extension checklist, as required.",
            response: null,
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(4) Land as soon as practicable.",
            response: null,
            justification: Justification.Indent2,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.IPSBLEEDOVERHEATCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Ice protection bleed cooling failure.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. WING/STAB IPS Switch", response: "OFF" },
          { type: ChecklistItemType.Challenge, content: "2. Thrust Lever", response: "REDUCE" },
          { type: ChecklistItemType.Challenge, content: "3. Avoid/exit icing conditions.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.IPSENGINLETOFFCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Engine IPS should be on.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. ENGINE IPS", response: "ON" },
          { type: ChecklistItemType.Challenge, content: "2. Verify message is extinguished.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.IPSENGINLETONCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Engine IPS should be off, OR", justification: Justification.Left },
          {
            type: ChecklistItemType.Note,
            content: "Shutoff solenoid failed to close.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Subtitle, content: "If Engine IPS should be OFF:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. ENGINE IPS",
            response: "OFF",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If shutoff solenoid failed to close:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. ENGINE IPS",
            response: "CYCLE",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. ENGINE IPS",
            response: "VERIFY OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "c. ENGINE IPS 1 CB (A6)",
            response: "VERIFY SET",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "d. ENGINE IPS 2 CB (D9)",
            response: "VERIFY SET",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.IPSENGINLETOVERHEATCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Inlet temp higher than required for anti-ice, OR",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content: "Inlet temp higher than safe levels.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. ENGINE IPS", response: "CYCLE" },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. ENGINE IPS",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Avoid/exit icing conditions.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "c. Reduce thrust as necessary to extinguish message.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.IPSENGINLETUNDERPRESSCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Engine IPS bleed flow low.", justification: Justification.Left },
          {
            type: ChecklistItemType.Challenge,
            content: "1. ENGINE IPS Switch",
            response: "CYCLE OFF, ON WITHIN <1 SEC",
          },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Continue flight.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Avoid/exit icing conditions.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.IPSFLUIDLOWCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Less than 15 minutes of IPS fluid remaining.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Avoid/exit icing conditions.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.IPSWINDSHLDTIMERCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Loss of WS/Rad pump automatic timer control.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. WINDSHLD IPS MAX", response: "A/R" },
          { type: ChecklistItemType.Challenge, content: "2. Avoid/exit icing conditions.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.IPSWINGSTABFAILCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Wing/Stabilizer IPS low system pressure, OR",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content: "Wing/Stabilizer IPS zonal pressure failure, OR",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content: "Wing/Stabilizer IPS controller failure, OR",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content: "Low system pressure, Wing/Stab IPS inoperative.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Avoid/exit icing conditions.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.IPSWINGSTABTEMPLOWCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Min temp for boot operation is -40 F.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Subtitle, content: "If activated by pilot:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. WING/STAB Switch",
            response: "OFF",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
          { type: ChecklistItemType.Subtitle, content: "If activation uncommanded:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. WING/STAB IPS CB (A6)",
            response: "PULL",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.LDGGEARFAILCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Landing gear didn't reach the selected position.",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "1. Landing Gear Indications",
            response: "VERIFY POSITION/LOCK",
          },
          { type: ChecklistItemType.Challenge, content: "2. Landing Gear", response: "CYCLE" },
          {
            type: ChecklistItemType.Note,
            content:
              "NOTE: Even though the gear assemblies are functioning properly, the root cause may be a failure of the gear sensors to indicate properly (Down/Up or Locked/Unlocked). Reversing the landing gear handle to the opposite position clears the inhibit of the hydraulic power pack enable (limited to 30 seconds of continuous operation).",
          },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Monitor landing gear indications.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Monitor for HYDRAULIC OVERHEAT Caution.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Perform visual verification of gear position by ATC (towered airport), if possible.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "c. Perform Alternate Gear Extension checklist.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.LDGGEARSELECTORFAILCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Cannot determine landing gear selector position.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Landing Gear", response: "CYCLE" },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. No further action required.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists and landing gear is down:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Do not cycle landing gear.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Land as soon as practicable.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists and landing gear is up:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Select gear down as required.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists and landing gear does not extend:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Perform Alternate Gear Extension.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.MAINBATTERYFAILCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Main battery (Bat 1) service is required.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Exit IMC as soon as practicable.", response: null },
          { type: ChecklistItemType.Challenge, content: "2. Land as soon as practicable.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
          {
            type: ChecklistItemType.Note,
            content: "CAUTION: Air restart may not be possible.",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content:
              "NOTE: Battery FAIL indicates an internal condition which reduces capability of the battery. Possible conditions include a faulty temperature sensor, disconnected heater, etc.",
          },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.MAINBATTERYFAULTCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Main battery (Bat 1) fault detected.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. BAT 1 Switch", response: "CYCLE" },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Continue flight.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Service aircraft as soon as practicable.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Exit IMC as soon as practicable.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Land as soon as practicable.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Challenge, content: "2. Contact Cirrus for corrective action.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
          {
            type: ChecklistItemType.Note,
            content: "CAUTION: Air Restart is not possible.",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content:
              "NOTE: Battery FAULT indicates a condition causing the battery to disable charging and/or discharging until corrected. Possible conditions include under-voltage, over-voltage, over-current, short-circuit, and over-temperature.",
          },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.MAINBUSVOLTSCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Loss of forward main power bus voltage, OR",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content: "Main power bus voltage is low.",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Link,
            content: "1. Perform GENERATOR 1 CURRENT Caution Checklist.",
            linkTarget: {
              checklistName: VisionJetCautionGZChecklistNames.GENERATOR1CURRENTCaution,
              checklistCategory: VisionJetChecklistCategory.CautionGZ,
            },
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(VisionJetCautionGZChecklistNames.NOADCMODESCaution, VisionJetChecklistCategory.CautionGZ, [
        {
          type: ChecklistItemType.Note,
          content: "Autopilot air data modes are not available.",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "NOTE: AP may only be engaged in pitch modes.",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
      ]),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.NOVERTMODESCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Autopilot vertical modes are not available.",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content: "NOTE: AP may only be engaged in lateral modes.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.OILFILTERBYPASSCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Oil filter diff press too high, bypass impending.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Avoid abrupt thrust lever movements.", response: null },
          { type: ChecklistItemType.Challenge, content: "2. Thrust Lever", response: "REDUCE (MINIMUM REQUIRED)" },
          { type: ChecklistItemType.Challenge, content: "3. Land as soon as practicable.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(VisionJetCautionGZChecklistNames.OXYGENOFFCaution, VisionJetChecklistCategory.CautionGZ, [
        { type: ChecklistItemType.Note, content: "Oxygen has not been turned on.", justification: Justification.Left },
        { type: ChecklistItemType.Challenge, content: "1. OXYGEN MASTER", response: "VERIFY ON" },
        { type: ChecklistItemType.Challenge, content: "2. OXYGEN CREW CB (E7)", response: "VERIFY SET" },
        { type: ChecklistItemType.Challenge, content: "3. OXYGEN CREW CB (E7)", response: "CYCLE" },
        { type: ChecklistItemType.Subtitle, content: "If message persists:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Altitude",
          response: "DESCEND (BELOW 10,000 FT), IF PRACTICAL",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
      ]),
      new VisionJetChecklist(VisionJetCautionGZChecklistNames.OXYGENONCaution, VisionJetChecklistCategory.CautionGZ, [
        { type: ChecklistItemType.Note, content: "Oxygen is on.", justification: Justification.Left },
        { type: ChecklistItemType.Subtitle, content: "On ground only:" },
        { type: ChecklistItemType.Challenge, content: "1. OXYGEN MASTER", response: "VERIFY OFF" },
        { type: ChecklistItemType.Subtitle, content: "If message persists:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. OXYGEN CREW CB (E7)",
          response: "VERIFY SET",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "b. OXYGEN CREW CB (E7)",
          response: "CYCLE",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "c. OXYGEN MASTER",
          response: "CYCLE",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Subtitle, content: "If message persists:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "(1) Service oxygen bottle as required.",
          response: null,
          justification: Justification.Indent2,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
      ]),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.OXYGENPASSENGERFAILCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Passenger oxygen valve has failed closed.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. OXYGEN PAX CB (B1)", response: "VERIFY SET" },
          { type: ChecklistItemType.Challenge, content: "2. OXYGEN PAX CB (B1)", response: "CYCLE" },
          { type: ChecklistItemType.Challenge, content: "3. OXYGEN MASTER", response: "VERIFY ON" },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Altitude",
            response: "DESCEND (BELOW 15,000 FT)",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.OXYGENPRESSURELOWCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Oxygen pressure below regulator control (250 PSI), OR",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content: "Oxygen pressure low (500 PSI).",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "1. Altitude",
            response: "DESCEND (BELOW 10,000 FT), IF PRACTICAL",
          },
          { type: ChecklistItemType.Challenge, content: "2. OXYGEN PAX CB (B1)", response: "PULL" },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(VisionJetCautionGZChecklistNames.PARKBRAKECaution, VisionJetChecklistCategory.CautionGZ, [
        { type: ChecklistItemType.Note, content: "Parking brake is set.", justification: Justification.Left },
        { type: ChecklistItemType.Subtitle, content: "On ground only:" },
        { type: ChecklistItemType.Challenge, content: "1. Parking Brake", response: "A/R" },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
      ]),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.PITCHMETACTIVECaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Pitch manual electric trim is active.",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "1. Prepare for abnormal pitch movement upon AP disconnect.",
            response: null,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "2. Perform Pitch Trim Runaway/Failure Checklist.",
            response: null,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.PROBEHEATFAILLCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Left probe heat failure.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. PROBE HT LEFT CB (A8)", response: "CYCLE" },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. No further action required.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          { type: ChecklistItemType.Subtitle, content: "If in flight:", justification: Justification.Indent1 },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) ADC 2",
            response: "SELECTED ACTIVE",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Subtitle,
            content: "If ADC 2 is unavailable or if PROBE HEAT FAIL R Caution is also present, and icing encountered:",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(a) Perform Loss of Reliable Airspeed Indication Checklist.",
            response: null,
            justification: Justification.Indent3,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(b) Exit icing conditions.",
            response: null,
            justification: Justification.Indent3,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent3 },
          { type: ChecklistItemType.Subtitle, content: "If on ground:", justification: Justification.Indent1 },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) Do not dispatch.",
            response: null,
            justification: Justification.Indent2,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.PROBEHEATFAILRCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Right probe heat failure.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. PROBE HT RIGHT CB (E4)", response: "CYCLE" },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. No further action required.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          { type: ChecklistItemType.Subtitle, content: "If in flight:", justification: Justification.Indent1 },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) ADC 1",
            response: "SELECTED ACTIVE",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Subtitle,
            content: "If ADC 1 is unavailable or if PROBE HEAT FAIL L Caution is also present, and icing encountered:",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(a) Perform Loss of Reliable Airspeed Indication Checklist.",
            response: null,
            justification: Justification.Indent3,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(b) Exit icing conditions.",
            response: null,
            justification: Justification.Indent3,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent3 },
          { type: ChecklistItemType.Subtitle, content: "If on ground:", justification: Justification.Indent1 },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) Do not dispatch.",
            response: null,
            justification: Justification.Indent2,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.PROBEHEATOFFCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Probe heat is required.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. Probe Heat Switch", response: "ON" },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. No further action required.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists, and icing encountered:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Airspeed",
            response: "EXPECT NO RELIABLE INDICATION",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Perform Loss of Reliable Airspeed Indication checklist.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Exit icing conditions.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.SFDALTMISCOMPARECaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "SFD altitude miscompare.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. DISPLAY BACKUP", response: "SELECT" },
          { type: ChecklistItemType.Challenge, content: "2. Altitude", response: "CROSS-CHECK SFD WITH PFD" },
          { type: ChecklistItemType.Challenge, content: "3. Altitude", response: "CROSS-CHECK PFD ADC #1 WITH ADC #2" },
          {
            type: ChecklistItemType.Note,
            content: "NOTE: Select PFD mode on GTC #2 or GTC #3 and select SENSORS menu to select PFD air data source.",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "4. Select correct sensor source, if required.",
            response: null,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "5. Pull erroneous ADC circuit breaker, if required.",
            response: null,
          },
          { type: ChecklistItemType.Subtitle, content: "If in RVSM airspace:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Exit RVSM airspace.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Challenge, content: "6. Exit IMC as soon as practical.", response: null },
          { type: ChecklistItemType.Challenge, content: "7. Land as soon as practicable.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.SFDIASMISCOMPARECaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "SFD airspeed miscompare.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. DISPLAY BACKUP", response: "SELECT" },
          { type: ChecklistItemType.Challenge, content: "2. Airspeed", response: "CROSS-CHECK SFD WITH PFD" },
          { type: ChecklistItemType.Challenge, content: "3. Airspeed", response: "CROSS-CHECK PFD ADC #1 WITH ADC #2" },
          {
            type: ChecklistItemType.Note,
            content: "NOTE: Select PFD mode on GTC #2 or GTC #3 and select SENSORS menu to select PFD air data source.",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "4. Select correct sensor source, if required.",
            response: null,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "5. Pull erroneous ADC circuit breaker, if required.",
            response: null,
          },
          { type: ChecklistItemType.Challenge, content: "6. Exit IMC as soon as practical.", response: null },
          { type: ChecklistItemType.Challenge, content: "7. Land as soon as practicable.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.SFDPITCHMISCOMPARECaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "SFD pitch miscompare.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. DISPLAY BACKUP", response: "SELECT" },
          { type: ChecklistItemType.Challenge, content: "2. Attitude", response: "CROSS-CHECK SFD WITH PFD" },
          {
            type: ChecklistItemType.Challenge,
            content: "3. Attitude",
            response: "CROSS-CHECK PFD AHRS #1 WITH AHRS #2",
          },
          {
            type: ChecklistItemType.Note,
            content: "NOTE: Select PFD mode on GTC #2 or GTC #3 and select SENSORS menu to select PFD attitude source.",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "4. Select correct sensor source, if required.",
            response: null,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "5. Pull erroneous AHRS circuit breaker, if required.",
            response: null,
          },
          { type: ChecklistItemType.Challenge, content: "6. Exit IMC as soon as practical.", response: null },
          { type: ChecklistItemType.Challenge, content: "7. Land as soon as practicable.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.SFDROLLMISCOMPARECaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "SFD roll miscompare.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. DISPLAY BACKUP", response: "SELECT" },
          { type: ChecklistItemType.Challenge, content: "2. Attitude", response: "CROSSCHECK SFD WITH PFD" },
          {
            type: ChecklistItemType.Challenge,
            content: "3. Attitude",
            response: "CROSSCHECK PFD AHRS #1 WITH AHRS #2",
          },
          {
            type: ChecklistItemType.Note,
            content: "NOTE: Select PFD mode on GTC #2 or GTC #3 and select SENSORS menu to select PFD attitude source.",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "4. Select correct sensor source, if required.",
            response: null,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "5. Pull erroneous AHRS circuit breaker, if required.",
            response: null,
          },
          { type: ChecklistItemType.Challenge, content: "6. Exit IMC as soon as practical.", response: null },
          { type: ChecklistItemType.Challenge, content: "7. Land as soon as practicable.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.STALLWARNINGFAILCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Stall warning failure.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. Airspeed", response: "MAINTAIN ABOVE 1.3 VS" },
          {
            type: ChecklistItemType.Challenge,
            content: "2. Avoid stalls, low airspeed, and uncoordinated or abrupt control inputs.",
            response: null,
          },
          { type: ChecklistItemType.Challenge, content: "3. Land as soon as practicable.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.STARTERENGAGEDCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Starter will not disengage (start relay stuck).",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Start", response: "ABORT" },
          { type: ChecklistItemType.Challenge, content: "2. GCU Reset via MFD Controller:", response: null },
          {
            type: ChecklistItemType.Challenge,
            content: "a. From Home, touch Aircraft Systems.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Touch the GCU Reset Button.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Challenge, content: "3. BAT 1 Switch", response: "OFF" },
          { type: ChecklistItemType.Challenge, content: "4. GEN 1 Switch", response: "OFF" },
          { type: ChecklistItemType.Subtitle, content: "If in flight:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Land as soon as practicable.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Subtitle, content: "If on ground:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Perform Shutdown Checklist.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.STICKPUSHERFAILCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Stick pusher failure.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. Airspeed", response: "MAINTAIN ABOVE 1.3 VS" },
          {
            type: ChecklistItemType.Challenge,
            content: "2. Avoid stalls, low airspeed, and uncoordinated or abrupt control inputs.",
            response: null,
          },
          { type: ChecklistItemType.Challenge, content: "3. Land as soon as practicable.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.TAKEOFFEMERBATCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Emergency battery (Bat 2) is not charged.",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content: "Emergency battery (Bat 2) is cold.",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "1. Delay takeoff until message extinguishes.",
            response: null,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.TAKEOFFFLAPSCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "Flaps not in takeoff configuration.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Takeoff", response: "ABORT" },
          { type: ChecklistItemType.Challenge, content: "2. Flaps", response: "SELECT 50%" },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.TAKEOFFTHRUSTCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "5 minute takeoff thrust limitation exceeded.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Thrust Lever", response: "MCT" },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.TCVCONTROLFAILCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          {
            type: ChecklistItemType.Note,
            content: "TCV motor controller has failed.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Cabin Temperature", response: "MONITOR" },
          {
            type: ChecklistItemType.Note,
            content:
              "NOTE: TCV will typically fail open resulting in colder than normal cabin temperatures. In the unlikely event that the TCV does not open upon failure, duct air temperature may be higher than desired and DUCT OVERHEAT Caution may occur.",
          },
          {
            type: ChecklistItemType.Subtitle,
            content: "If message persists and cabin temperature is warmer than acceptable:",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Altitude",
            response: "DESCEND (BELOW 10,000 FT), IF PRACTICAL",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. BLEED Switch",
            response: "FRESH",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "c. CABIN PRESSURE DUMP Button",
            response: "PRESS",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "d. Land as soon as practicable.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          {
            type: ChecklistItemType.Subtitle,
            content: "If message persists and cabin temperature is colder than acceptable:",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Altitude",
            response: "DESCEND TO WARMER OUTSIDE AIR TEMPERATURE, IF PRACTICAL",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Land as soon as practicable.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.THROTTLESERVOCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Throttle servo has failed.", justification: Justification.Left },
          {
            type: ChecklistItemType.Note,
            content:
              "NOTE: Autothrottle functions, including thrust lock, will be unavailable. CAPS activation will require manual retard of thrust lever to IDLE.",
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.TT2HEATFAILCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "TT2 probe heater failure.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. ENG. IPS Switch", response: "CYCLE" },
          { type: ChecklistItemType.Challenge, content: "2. ENGINE IPS 1 CB (A6)", response: "VERIFY SET" },
          { type: ChecklistItemType.Challenge, content: "3. ENGINE IPS 2 CB (D9)", response: "VERIFY SET" },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Avoid/exit icing conditions.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(VisionJetCautionGZChecklistNames.WOWFAILCaution, VisionJetChecklistCategory.CautionGZ, [
        {
          type: ChecklistItemType.Note,
          content: "WOW is indicating on ground state.",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Challenge, content: "1. Maintain at least 70% N2.", response: null },
        { type: ChecklistItemType.Challenge, content: "2. Land as soon as practicable.", response: null },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
      ]),
      new VisionJetChecklist(
        VisionJetCautionGZChecklistNames.YAWSASSERVOCaution,
        VisionJetChecklistCategory.CautionGZ,
        [
          { type: ChecklistItemType.Note, content: "Yaw SAS servo has failed.", justification: Justification.Left },
          { type: ChecklistItemType.Subtitle, content: "If in flight:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Limit flaps to 0% or 50% in landing configuration.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Perform Flaps Inoperative Approach/Landing checklist.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content:
              "c. Avoid any unnecessary maneuvers during flight. Limit maneuvers only to those necessary to safely land the aircraft.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If on ground:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Do not dispatch.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
        true,
      ),
    ];
  }
}
