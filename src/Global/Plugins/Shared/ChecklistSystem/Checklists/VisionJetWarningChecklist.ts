import {
  ChecklistItemInteractionType,
  ChecklistItemType,
  Justification,
} from "@base/Shared/ChecklistSystem/ChecklistItem";
import { VisionJetChecklist, VisionJetChecklistCategory } from "../Checklist";
import { VisionJetEmergencyProceduresChecklistNames } from "../Checklists/VisionJetEmergencyProceduresChecklist";

export enum VisionJetWarningChecklistNames {
  AUTODESCENTWarning = "AUTO DESCENT Warning",
  CABINALTITUDEHIGHWarning = "CABIN ALTITUDE HIGH Warning",
  CABINDIFFPRESSUREHIGHWarning = "CABIN DIFF PRESSURE HIGH Warning",
  CABINDUMPWarning = "CABIN DUMP Warning",
  CAPSACTIVATEDWarning = "CAPS ACTIVATED Warning",
  DOOROPENBAGGAGEWarning = "DOOR OPEN BAGGAGE Warning",
  DOOROPENMAINWarning = "DOOR OPEN MAIN Warning",
  EMERAUTOLANDACTIVATINGWarning = "EMER AUTOLAND ACTIVATING Warning",
  EMERAUTOLANDBRAKESWarning = "EMER AUTOLAND BRAKES Warning",
  EMERBUSVOLTSWarning = "EMER BUS VOLTS Warning",
  ENGINEFIREWarningInFlight = "ENGINE FIRE Warning - In Flight",
  ENGINEFIREWarningOnGround = "ENGINE FIRE Warning - On Ground",
  ENGINESTARTN1Warning = "ENGINE START N1 Warning",
  EXTERNALPOWERCONNECTEDWarning = "EXTERNAL POWER CONNECTED Warning",
  FADECCTRLDEGRADEDWarning = "FADEC CTRL DEGRADED Warning",
  FADECNODISPATCHWarning = "FADEC NO DISPATCH Warning",
  FLAPSCALMODEWarning = "FLAPS CAL MODE Warning",
  FLAPSICEWarning = "FLAPS ICE Warning",
  FUELFILTERBYPASSWarning = "FUEL FILTER BYPASS Warning",
  FUELIMBALANCEWarning = "FUEL IMBALANCE Warning",
  FUELLOWLEFTRIGHTTOTALWarning = "FUEL LOW LEFT/RIGHT/TOTAL Warning",
  FUELPRESSURELOWWarning = "FUEL PRESSURE LOW Warning",
  FUELTEMPLOWWarning = "FUEL TEMP LOW Warning",
  FUELVALVESBOTHFAILWarning = "FUEL VALVES BOTH FAIL Warning",
  GENERATOR1CURRENTWarning = "GENERATOR 1 CURRENT Warning",
  GENERATOR1OVERVOLTAGEWarning = "GENERATOR 1 OVERVOLTAGE Warning",
  GENERATOR2CURRENTWarning = "GENERATOR 2 CURRENT Warning",
  GENERATOR2OVERVOLTAGEWarning = "GENERATOR 2 OVERVOLTAGE Warning",
  ITTWarning = "ITT Warning",
  LDGGEARISUPWarning = "LDG GEAR IS UP Warning",
  LDGGEARSELECTEDUPWarning = "LDG GEAR SELECTED UP Warning",
  N1Warning = "N1 Warning",
  N2Warning = "N2 Warning",
  OILCHIPDETECTWarning = "OIL CHIP DETECT Warning",
  OILFILTERBYPASSWarning = "OIL FILTER BYPASS Warning",
  OILPRESSUREWarning = "OIL PRESSURE Warning",
  OILTEMPERATUREWarning = "OIL TEMPERATURE Warning",
  STALLWARNING = "STALL WARNING",
  STICKPUSHERWarning = "STICK PUSHER Warning",
  TAKEOFFPITCHTRIMWarning = "TAKEOFF PITCH TRIM Warning",
  THRLEVERCALIBRATIONWarning = "THR LEVER CALIBRATION Warning",
  TT2OVERHEATWarning = "TT2 OVERHEAT Warning",
}

/** A utility class to generate Vision Jet Warning checklist data. */
export class VisionJetWarningChecklists {
  /**
   * Generates the Vision Jet Warning checklist data.
   * @returns An array of Vision Jet Warning checklists.
   **/
  public static getChecklists(): VisionJetChecklist[] {
    return [
      new VisionJetChecklist(VisionJetWarningChecklistNames.AUTODESCENTWarning, VisionJetChecklistCategory.Warning, [
        {
          type: ChecklistItemType.Note,
          content: "Aircraft descending to 14,000 FT.",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content:
            'Note: Unless canceled, Safe Return Autoland will activate descending through 15,000 feet pressure altitude and change route to an emergency landing airport. Refer to AFM Section 10: Safety Information, "Safe Return Autoland System (if installed)".',
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Subtitle, content: "To cancel auto descent, disconnect the autopilot:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. AP DISC Button",
          response: "PRESS AND RELEASE",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.CABINALTITUDEHIGHWarning,
        VisionJetChecklistCategory.Warning,
        [
          { type: ChecklistItemType.Note, content: "Cabin high altitude detected.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. Oxygen Mask", response: "DON, 100%" },
          { type: ChecklistItemType.Challenge, content: "2. BLEED Switch", response: "VERIFY BLEED" },
          { type: ChecklistItemType.Challenge, content: "3. MIC SELECT Switch", response: "MASK MIC" },
          {
            type: ChecklistItemType.Challenge,
            content: "4. Perform Emergency Descent checklist as required.",
            response: null,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "5. Passenger Oxygen",
            response: "ENSURE PASSENGERS ARE RECEIVING OXYGEN",
          },
          { type: ChecklistItemType.Subtitle, content: "If passenger oxygen masks do not deploy:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. PAX OXY DEPLOY Switch",
            response: "ON",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Challenge, content: "6. Transponder", response: "SQUAWK 7700" },
          { type: ChecklistItemType.Challenge, content: "7. CABIN PRESSURE DUMP Button", response: "PRESS" },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.CABINDIFFPRESSUREHIGHWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Cabin differential pressure is too high.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Oxygen Mask", response: "DON, 100%" },
          { type: ChecklistItemType.Challenge, content: "2. BLEED Switch", response: "FRESH" },
          { type: ChecklistItemType.Challenge, content: "3. MIC SELECT Switch", response: "MASK MIC" },
          {
            type: ChecklistItemType.Challenge,
            content: "4. Perform Emergency Descent checklist as required.",
            response: null,
          },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Thrust Lever",
            response: "REDUCE",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. CABIN PRESSURE DUMP Button",
            response: "PRESS",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(VisionJetWarningChecklistNames.CABINDUMPWarning, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "Cabin pressure dump activated.", justification: Justification.Left },
        { type: ChecklistItemType.Subtitle, content: "If message is accompanied by CABIN ALTITUDE HIGH Warning:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Perform CABIN ALTITUDE HIGH Warning checklist.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
      ]),
      new VisionJetChecklist(VisionJetWarningChecklistNames.CAPSACTIVATEDWarning, VisionJetChecklistCategory.Warning, [
        {
          type: ChecklistItemType.Note,
          content: "CAPS sequence has been activated.",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Subtitle,
          content: "If message is displayed due to CAPS activation (pulling of CAPS Activation Handle):",
        },
        { type: ChecklistItemType.Challenge, content: "1. Refer to CAPS Activation procedure.", response: null },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Note,
          content:
            "WARNING: Do not press and hold AP DISC Button if CAPS handle has been pulled; if handle has been pulled, parachute will deploy regardless and pressing AP DISC will prevent the aircraft from adequately slowing prior to deployment.",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content:
            "CAUTION: Delay of AP DISC Button in response to an automatic flight control malfunction while manually overriding controls may result in excessive pitch out of trim condition and will require retrimming of the aircraft as needed.",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Subtitle, content: "If message is displayed but CAPS handle is NOT pulled:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. AP Disconnect",
          response: "PRESS AND HOLD 5 SECONDS",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Note,
          content:
            "WARNING: CAPS AP mode will be unavailable for remainder of flight until next power cycle. If CAPS activation is necessary, the pilot must manually reduce airspeed below 135 KIAS and 145 KTAS, whichever is lower, to deploy the parachute. Refer to CAPS Activation procedure.",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Link,
          content: 'Refer to Section 3: Emergency Procedures, "CAPS Activation" procedure.',
          linkTarget: {
            checklistName: VisionJetEmergencyProceduresChecklistNames.CAPSActivation,
            checklistCategory: VisionJetChecklistCategory.EmergencyProcedures,
          },
          justification: Justification.Indent1,
        },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.DOOROPENBAGGAGEWarning,
        VisionJetChecklistCategory.Warning,
        [
          { type: ChecklistItemType.Note, content: "Baggage door is open.", justification: Justification.Left },
          { type: ChecklistItemType.Subtitle, content: "If in flight:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Land as soon as practicable.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If on ground:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Verify baggage door is closed.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(VisionJetWarningChecklistNames.DOOROPENMAINWarning, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "Main door is open.", justification: Justification.Left },
        { type: ChecklistItemType.Subtitle, content: "If in flight:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Airplane Control",
          response: "MAINTAIN",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "b. Airspeed",
          response: "LIMIT TO 150 KIAS",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "c. Altitude",
          response: "AS LOW AS PRACTICAL",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "d. Land as soon as practicable.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        { type: ChecklistItemType.Subtitle, content: "If on ground:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Verify main door is closed.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.EMERAUTOLANDACTIVATINGWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Emergency Autoland is activating.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Subtitle, content: "If Safe Return Autoland activation is not desired:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. AP Disconnect",
            response: "PRESS AND HOLD 1 SECOND",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Subtitle,
            content:
              "If Safe Return Autoland activation has proceeded beyond 10-second\nEMER AUTOLAND ACTIVATING period:",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) Transponder",
            response: "SET",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(2) FMS",
            response: "A/R",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(3) Altimeter",
            response: "SET",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Subtitle,
            content: "If system has deployed flaps:",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(a) Flaps",
            response: "50%",
            justification: Justification.Indent3,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(b) Flaps",
            response: "A/R",
            justification: Justification.Indent3,
          },
          {
            type: ChecklistItemType.Subtitle,
            content: "If system has deployed landing gear:",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(a) Landing Gear",
            response: "DOWN",
            justification: Justification.Indent3,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(b) Landing Gear",
            response: "A/R",
            justification: Justification.Indent3,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
          {
            type: ChecklistItemType.Subtitle,
            content: "If Malfunction of Safe Return Autoland activation is suspected:",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) EMER AUTOLAND CB (E11)",
            response: "PULL",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(2) Perform Automatic Flight Control Malfunction (Stick Pusher, ESP, USP, Autopilot) checklist.",
            response: null,
            justification: Justification.Indent2,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
          { type: ChecklistItemType.Subtitle, content: "If Safe Return Autoland activation is desired:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. No further action is required.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.EMERAUTOLANDBRAKESWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Do not dispatch, autoland brakes in test mode.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Do not dispatch.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(VisionJetWarningChecklistNames.EMERBUSVOLTSWarning, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "Operating on emergency power.", justification: Justification.Left },
        {
          type: ChecklistItemType.Subtitle,
          content: "If GENERATOR 1 CURRENT OR GENERATOR 2 CURRENT CAS is also displayed:",
        },
        {
          type: ChecklistItemType.Challenge,
          content:
            "a. Perform GENERATOR 1 CURRENT OR GENERATOR 2 CURRENT procedure prior to performing remainder of EMER BUS VOLTS procedure.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Subtitle, content: "If GEN 1 and GEN 2 are not within limits:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. GEN 1 Switch",
          response: "OFF",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "b. GEN 2 Switch",
          response: "OFF",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "c. Interior Lights",
          response: "OFF",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "d. BAT 1 Switch",
          response: "OFF",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "e. BAT 2 Switch",
          response: "VERIFY ON",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "f. Land as soon as possible.",
          response: null,
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Note,
          content: "Procedure Complete",
          justification: Justification.Indent1,
          blanksBelow: 1,
        },
        { type: ChecklistItemType.Subtitle, content: "EMERGENCY BUS CIRCUIT BREAKERS", blanksBelow: 1 },
        {
          type: ChecklistItemType.Subtitle,
          content: "BATT1 Hot Bus",
          interactionType: ChecklistItemInteractionType.ScrollStop,
        },
        {
          type: ChecklistItemType.Note,
          content: "CONV LIGHTS CB - Interior Lights Controller",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Note, content: "CAPS A CB - Primary CAPS", justification: Justification.Left },
        {
          type: ChecklistItemType.Subtitle,
          content: "Copilot Circuit Breaker Panel (Row D)",
          interactionType: ChecklistItemInteractionType.ScrollStop,
        },
        {
          type: ChecklistItemType.Note,
          content: "FUEL VALVE 1 CB (D5) - Fuel Control Valve 1",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "LANDING GEAR IND CB (D6) - L MLG WOW Sensor",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "LANDING GEAR IND CB (D6) - R MLG WOW Sensor",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "LANDING GEAR IND CB (D6) - L MLG Down Sensor",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "LANDING GEAR IND CB (D6) - L MLG Locked Sensor",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "LANDING GEAR IND CB (D6) - R MLG Down Sensor",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "LANDING GEAR IND CB (D6) - R MLG Locked Sensor",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "LANDING GEAR IND CB (D6) - NLG Down Sensor",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "LANDING GEAR IND CB (D6) - NLG Locked Sensor",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "STANDBY ATT CB (D2) - ADAHRS 3 (MD302)",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Note, content: "GTC 1A CB (D3) - GTC 1 (pwr A)", justification: Justification.Left },
        { type: ChecklistItemType.Note, content: "GEA CB (D4) - RDM", justification: Justification.Left },
        { type: ChecklistItemType.Note, content: "GEA CB (D4) - GEA 71", justification: Justification.Left },
        { type: ChecklistItemType.Note, content: "CAPS B CB (D1) - Secondary CAPS", blanksBelow: 1 },
        {
          type: ChecklistItemType.Subtitle,
          content: "Pilot Circuit Breaker Panel (Row A)",
          interactionType: ChecklistItemInteractionType.ScrollStop,
        },
        {
          type: ChecklistItemType.Note,
          content: "CABIN PRESS 2 CB (A10) - Manual Dump SW & Controller Solenoid Pwr",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "AP CTRL CB (A7) - AP Controller (GMC 707)",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "FIRE PROT 1 CB (A9) - Fire Bottle 1",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "FIRE PROT 1 CB (A9) - Fire Prot. CCA LED",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "CREW LIGHTS CB (A11) - Task Light, Copilot",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "CREW LIGHTS CB (A11) - Task Light, Pilot",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Note, content: "PROBE HT LEFT CB (A8) - Left Pitot Heat", blanksBelow: 1 },
        {
          type: ChecklistItemType.Subtitle,
          content: "Pilot Circuit Breaker Panel (Row B)",
          interactionType: ChecklistItemInteractionType.ScrollStop,
        },
        {
          type: ChecklistItemType.Note,
          content: "FIRE PROT 2 CB (B9) - Fire Bottle 2",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "FIRE PROT 2 CB (B9) - Fuel Shutoff Valve",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "AHRS 1 CB (B10) - AHRS 1 (GRS79)",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Note, content: "ADC 1 CB (B11) - GDC 1", justification: Justification.Left },
        { type: ChecklistItemType.Note, content: "GTC 2A CB (B5) - GTC 2 (pwr A)", justification: Justification.Left },
        {
          type: ChecklistItemType.Note,
          content: "GPS NAV GIA 1 CB (B6) - GIA 1 MAIN",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Note, content: "PFD A CB (B8) - PFD (pwr A)", justification: Justification.Left },
        { type: ChecklistItemType.Note, content: "COM 1 CB (B7) - GIA 1 COM", justification: Justification.Left },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.ENGINEFIREWarningInFlight,
        VisionJetChecklistCategory.Warning,
        [
          { type: ChecklistItemType.Note, content: "Engine fire detected.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. Thrust Lever", response: "IDLE" },
          { type: ChecklistItemType.Challenge, content: "2. Pitch for 120 KIAS (APPROX.)", response: null },
          { type: ChecklistItemType.Challenge, content: "3. Wait 15 seconds.", response: null },
          {
            type: ChecklistItemType.Subtitle,
            content:
              "If ENGINE FIRE Warning remains on, or secondary fire indications are present - probable engine fire:",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "a. ENGINE FIRE ACK",
            response: "LIFT GUARD, TOGGLE",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. L / R PUSH TO DISCHARGE",
            response: "PUSH",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "c. Oxygen Mask",
            response: "DON, 100%",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "d. MIC SELECT",
            response: "MASK MIC",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "e. Engine Knob",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "f. Engine Button",
            response: "PRESS (MOMENTARY)",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "g. GEN 1 & GEN 2",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "h. Perform Emergency Landing w/o Power checklist.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          {
            type: ChecklistItemType.Subtitle,
            content:
              "If ENGINE FIRE Warning extinguishes and secondary fire indications are not present - probable bleed leak:",
          },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Thrust Lever",
            response: "REDUCE (MINIMUM REQUIRED)",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Land as soon as possible.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Subtitle, content: "If time permits:" },
          {
            type: ChecklistItemType.Challenge,
            content: "c. BLEED Switch",
            response: "FRESH",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "d. Oxygen Masks",
            response: "DON, 100%",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "e. L / R MIC",
            response: "MASK MIC",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "f. Inlet Anti-Ice",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "g. Exit icing conditions.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "h. Prepare for Emergency Descent, Loss of Cabin Pressure.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.ENGINEFIREWarningOnGround,
        VisionJetChecklistCategory.Warning,
        [
          { type: ChecklistItemType.Note, content: "Engine fire detected.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. ENGINE FIRE ACK", response: "LIFT GUARD, TOGGLE" },
          { type: ChecklistItemType.Challenge, content: "2. L/R PUSH TO DISCHARGE", response: "PUSH" },
          { type: ChecklistItemType.Challenge, content: "3. Engine Knob", response: "OFF" },
          { type: ChecklistItemType.Challenge, content: "4. Engine Button", response: "PRESS (MOMENTARY)" },
          { type: ChecklistItemType.Challenge, content: "5. Evacuate airplane.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(VisionJetWarningChecklistNames.ENGINESTARTN1Warning, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "N1 is not indicating rotation.", justification: Justification.Left },
        { type: ChecklistItemType.Challenge, content: "1. ENGINE START N1", response: "ABORT START" },
        { type: ChecklistItemType.Subtitle, content: "If in flight:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Increase airspeed and retry start procedure.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        { type: ChecklistItemType.Subtitle, content: "If on ground:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Contact Cirrus for disposition.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.EXTERNALPOWERCONNECTEDWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "External power is connected, set park brake.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Subtitle, content: "On ground only:" },
          { type: ChecklistItemType.Challenge, content: "1. Parking Brake or Brakes", response: "SET OR HOLD" },
          { type: ChecklistItemType.Challenge, content: "2. Disconnect external power.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.FADECCTRLDEGRADEDWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Reference FADEC Fault Code Messages.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. FADEC Reset via MFD Controller:", response: null },
          {
            type: ChecklistItemType.Challenge,
            content: "a. From Home, touch Aircraft Systems.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Touch the FADEC Stale Fault Reset Button.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. No further action required.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Note,
            content:
              "WARNING: Possible inaccurate automatic power setting. The engine may exceed or go below allowable engine operating parameters which could ultimately result in loss of thrust. Avoid fast thrust lever movement or rapid thrust setting changes.",
          },
          { type: ChecklistItemType.Subtitle, content: "If in flight:", justification: Justification.Indent1 },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) ENG. IPS",
            response: "ON",
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(a) Allow sufficient time for ice to clear from inlet probes.",
            response: null,
            justification: Justification.Indent3,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(2) FADEC Reset via MFD Controller:",
            response: null,
            justification: Justification.Indent2,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(a) From Home, touch Aircraft Systems.",
            response: null,
            justification: Justification.Indent3,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(b) Touch the FADEC Stale Fault Reset Button.",
            response: null,
            justification: Justification.Indent3,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "(3) Land as soon as possible.",
            response: null,
            justification: Justification.Indent2,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
          { type: ChecklistItemType.Subtitle, content: "If on ground:", justification: Justification.Indent1 },
          {
            type: ChecklistItemType.Challenge,
            content: "(1) Do not dispatch.",
            response: null,
            justification: Justification.Indent2,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.FADECNODISPATCHWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Reference FADEC Fault Code Messages.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Subtitle, content: "On ground only:" },
          { type: ChecklistItemType.Challenge, content: "1. FADEC Reset via MFD Controller:", response: null },
          {
            type: ChecklistItemType.Challenge,
            content: "a. From Home, touch Aircraft Systems.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Touch the FADEC Stale Fault Reset Button.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. No further action required.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Do not dispatch.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(VisionJetWarningChecklistNames.FLAPSCALMODEWarning, VisionJetChecklistCategory.Warning, [
        {
          type: ChecklistItemType.Note,
          content: "Do not dispatch, flaps system needs service.",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Subtitle, content: "On ground only:" },
        { type: ChecklistItemType.Challenge, content: "1. Do not dispatch.", response: null },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
      ]),
      new VisionJetChecklist(VisionJetWarningChecklistNames.FLAPSICEWarning, VisionJetChecklistCategory.Warning, [
        {
          type: ChecklistItemType.Note,
          content: "Full flaps prohibited in icing conditions.",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Challenge, content: "1. Flaps", response: "SET UP OR 50%" },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        {
          type: ChecklistItemType.Note,
          content: "WARNING: Maximum flap deflection in icing conditions is limited to 50%.",
          justification: Justification.Left,
        },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.FUELFILTERBYPASSWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Fuel filter diff press too high, bypass impending.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Thrust Lever", response: "REDUCE (MINIMUM REQUIRED)" },
          { type: ChecklistItemType.Challenge, content: "3. Land as soon as possible.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(VisionJetWarningChecklistNames.FUELIMBALANCEWarning, VisionJetChecklistCategory.Warning, [
        {
          type: ChecklistItemType.Note,
          content: "Fuel imbalance is greater than or equal to 50 gallons.",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Challenge, content: "1. Fuel Quantity/Fuel Remaining", response: "COMPARE" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Refer to EIS for fuel quantity (based on level sensors).",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Challenge, content: "2. Fuel Control Switch", response: "FULLEST TANK" },
        { type: ChecklistItemType.Challenge, content: "3. Airspeed", response: "MAINTAIN FOR ADEQUATE ROLL CONTROL" },
        { type: ChecklistItemType.Subtitle, content: "If message extinguishes or imbalance decreases:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Continue flight.",
          response: null,
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "b. Fuel Control Switch",
          response: "AUTO",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        { type: ChecklistItemType.Subtitle, content: "If message persists or imbalance increases:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Land as soon as possible.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.FUELLOWLEFTRIGHTTOTALWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Left fuel tank is nearly empty, OR",
            justification: Justification.Left,
          },
          {
            type: ChecklistItemType.Note,
            content: "Right fuel tank is nearly empty, OR",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Note, content: "Total fuel quantity is low.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. Fuel Quantity", response: "CHECK" },
          { type: ChecklistItemType.Challenge, content: "2. Fuel Control Switch", response: "FULLEST TANK" },
          { type: ChecklistItemType.Challenge, content: "3. Land as soon as possible.", response: null },
          {
            type: ChecklistItemType.Challenge,
            content:
              "4. Avoid excessive pitch attitudes and lateral acceleration to prevent uncovering the fuel inlet lines and possible fuel flow interruption.",
            response: null,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.FUELPRESSURELOWWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "FDU fuel inlet pressure is low.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Fuel Control Switch", response: "SWITCH TO OTHER TANK" },
          {
            type: ChecklistItemType.Challenge,
            content:
              "a. Refer to EIS for current tank selection (AUTO selection shown in white; LEFT/RIGHT selection shown in cyan).",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Continue flight.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Fuel Quantity",
            response: "MAINTAIN BALANCE",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Land as soon as possible.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(VisionJetWarningChecklistNames.FUELTEMPLOWWarning, VisionJetChecklistCategory.Warning, [
        {
          type: ChecklistItemType.Note,
          content: "Fuel temperature below operating limit.",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Challenge, content: "1. Fuel Temp (L / R)", response: "CHECK" },
        { type: ChecklistItemType.Subtitle, content: "If in flight:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Climb or descend to warmer conditions.",
          response: null,
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Note,
          content:
            "NOTE: Change altitude to increase OAT and increase fuel temperature. Due to temperature inversion, warmer temperatures may be at a higher altitude.",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Subtitle, content: "If message extinguishes:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "(1) Fuel Temp",
          response: "MONITOR",
          justification: Justification.Indent2,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        { type: ChecklistItemType.Subtitle, content: "If message persists:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "(1) Land as soon as practicable.",
          response: null,
          justification: Justification.Indent2,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        { type: ChecklistItemType.Subtitle, content: "If on ground:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Warm aircraft to increase fuel temperature.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.FUELVALVESBOTHFAILWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Both fuel control valves have failed.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. Fuel Quantity", response: "CHECK" },
          { type: ChecklistItemType.Challenge, content: "2. Airspeed", response: "MAINTAIN FOR ADEQUATE ROLL CONTROL" },
          { type: ChecklistItemType.Challenge, content: "3. Land as soon as possible.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.GENERATOR1CURRENTWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Generator 1 current is too high.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. GEN 1 Switch", response: "OFF" },
          { type: ChecklistItemType.Challenge, content: "2. GCU Reset via MFD Controller:", response: null },
          {
            type: ChecklistItemType.Challenge,
            content: "a. From Home, touch Aircraft Systems.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Touch the GCU Reset Button.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Challenge, content: "3. ECS DISABLE", response: "SELECT" },
          { type: ChecklistItemType.Challenge, content: "4. GEN 1 Switch", response: "ON" },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. ECS DISABLE",
            response: "DESELECT",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. GEN 1 Switch",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. BAT 1 Switch",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "c. Land as soon as practicable, avoiding IMC or night flight as able (reduced power redundancy).",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.GENERATOR1OVERVOLTAGEWarning,
        VisionJetChecklistCategory.Warning,
        [
          { type: ChecklistItemType.Note, content: "Generator 1 voltage is high.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. GEN 1 Switch", response: "OFF" },
          { type: ChecklistItemType.Challenge, content: "2. GCU Reset via MFD Controller:", response: null },
          {
            type: ChecklistItemType.Challenge,
            content: "a. From Home, touch Aircraft Systems.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Touch the GCU Reset Button.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Challenge, content: "3. ECS DISABLE", response: "SELECT" },
          { type: ChecklistItemType.Challenge, content: "4. GEN 1 Switch", response: "ON" },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. ECS DISABLE",
            response: "DESELECT",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. GEN 1 Switch",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. BAT 1 Switch",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "c. Land as soon as practicable, avoiding IMC or night flight as able (reduced power redundancy).",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.GENERATOR2CURRENTWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Generator 2 current is too high.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Challenge, content: "1. GEN 2 Switch", response: "CYCLE" },
          { type: ChecklistItemType.Challenge, content: "2. GEN 2 Amps", response: "CHECK WITHIN LIMITS" },
          { type: ChecklistItemType.Subtitle, content: "If GEN 2 amps are within limits:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. No further action required.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If GEN 2 amps are still not within limits:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. GEN 2 Switch",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Note,
            content: "NOTE: GEN 1 will support GEN 2 electrical loads.",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Land as soon as practicable.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.GENERATOR2OVERVOLTAGEWarning,
        VisionJetChecklistCategory.Warning,
        [
          { type: ChecklistItemType.Note, content: "Generator 2 voltage is high.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. GEN 2 Switch", response: "CYCLE" },
          { type: ChecklistItemType.Subtitle, content: "If message persists:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. GEN 2 Switch",
            response: "OFF",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Note,
            content: "NOTE: GEN 1 will support GEN 2 electrical loads.",
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Land as soon as practicable.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Subtitle, content: "If message extinguishes:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. No further action required.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(VisionJetWarningChecklistNames.ITTWarning, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "ITT limits exceeded.", justification: Justification.Left },
        { type: ChecklistItemType.Subtitle, content: "If in flight:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a Thrust Lever",
          response: "REDUCE",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "b. ITT",
          response: "MONITOR",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Subtitle, content: "If message persists:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "(1) Land as soon as practicable.",
          response: null,
          justification: Justification.Indent2,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        { type: ChecklistItemType.Subtitle, content: "If on ground:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Shut down engine. Do not dispatch.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
      ]),
      new VisionJetChecklist(VisionJetWarningChecklistNames.LDGGEARISUPWarning, VisionJetChecklistCategory.Warning, [
        {
          type: ChecklistItemType.Note,
          content: "Landing gear is not down and locked for landing.",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Subtitle, content: "If in flight:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Landing Gear",
          response: "CHECK DOWN",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Subtitle, content: "If message persists:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "(1) Perform Alternate Gear Extension checklist.",
          response: null,
          justification: Justification.Indent2,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        { type: ChecklistItemType.Subtitle, content: "If on ground:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Do not taxi.",
          response: null,
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "b. Landing Gear",
          response: "CHECK DOWN",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.LDGGEARSELECTEDUPWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Ldg gear should be selected down while on ground.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Subtitle, content: "If on ground:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Do not taxi.",
            response: null,
            justification: Justification.Indent1,
          },
          {
            type: ChecklistItemType.Challenge,
            content: "b. Landing Gear",
            response: "SELECT DOWN",
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
          { type: ChecklistItemType.Subtitle, content: "If in flight:" },
          {
            type: ChecklistItemType.Challenge,
            content: "a. Disregard.",
            response: null,
            justification: Justification.Indent1,
          },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
        ],
      ),
      new VisionJetChecklist(VisionJetWarningChecklistNames.N1Warning, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "N1 speed exceeded.", justification: Justification.Left },
        { type: ChecklistItemType.Subtitle, content: "If in flight:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Thrust Lever",
          response: "REDUCE",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "b. Monitor N1.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Subtitle, content: "If message persists:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "(1) Land as soon as practicable.",
          response: null,
          justification: Justification.Indent2,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        { type: ChecklistItemType.Subtitle, content: "If on ground:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Shut down engine. Do not dispatch.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
      ]),
      new VisionJetChecklist(VisionJetWarningChecklistNames.N2Warning, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "N2 speed exceeded.", justification: Justification.Left },
        { type: ChecklistItemType.Subtitle, content: "If in flight:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Thrust Lever",
          response: "REDUCE",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "b. Monitor N2.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Subtitle, content: "If message persists:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "(1) Land as soon as practicable.",
          response: null,
          justification: Justification.Indent2,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        { type: ChecklistItemType.Subtitle, content: "If on ground:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Shut down engine. Do not dispatch.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
      ]),
      new VisionJetChecklist(VisionJetWarningChecklistNames.OILCHIPDETECTWarning, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "Engine oil debris detected.", justification: Justification.Left },
        { type: ChecklistItemType.Subtitle, content: "On ground only:" },
        { type: ChecklistItemType.Challenge, content: "1. Shut down engine. Do not dispatch.", response: null },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.OILFILTERBYPASSWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Oil filter diff press too high, bypass impending.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Subtitle, content: "On ground only:" },
          { type: ChecklistItemType.Challenge, content: "1. Shut down engine. Do not dispatch.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(VisionJetWarningChecklistNames.OILPRESSUREWarning, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "Engine oil pressure exceedance.", justification: Justification.Left },
        { type: ChecklistItemType.Subtitle, content: "If in flight:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Monitor oil system pressure and temperature.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Subtitle, content: "If message persists:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "(1) Thrust Lever",
          response: "REDUCE (MINIMUM REQUIRED)",
          justification: Justification.Indent2,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "(2) Avoid abrupt thrust lever movements.",
          response: null,
          justification: Justification.Indent2,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "(3) Land as soon as possible.",
          response: null,
          justification: Justification.Indent2,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent2 },
        { type: ChecklistItemType.Subtitle, content: "If on ground:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Perform Abnormal Engine Shutdown On Ground checklist.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
      ]),
      new VisionJetChecklist(VisionJetWarningChecklistNames.OILTEMPERATUREWarning, VisionJetChecklistCategory.Warning, [
        {
          type: ChecklistItemType.Note,
          content: "Engine oil temperature exceedance.",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Challenge, content: "1. Thrust Lever", response: "REDUCE (MINIMUM REQUIRED)" },
        {
          type: ChecklistItemType.Challenge,
          content: "2. Monitor oil system pressure and temperature.",
          response: null,
        },
        { type: ChecklistItemType.Subtitle, content: "If message persists:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Land as soon as possible.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Indent1 },
      ]),
      new VisionJetChecklist(VisionJetWarningChecklistNames.STALLWARNING, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "Stall warning active.", justification: Justification.Left },
        { type: ChecklistItemType.Challenge, content: "1. AOA", response: "REDUCE" },
        { type: ChecklistItemType.Challenge, content: "2. Thrust Lever", response: "T/O" },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
      ]),
      new VisionJetChecklist(VisionJetWarningChecklistNames.STICKPUSHERWarning, VisionJetChecklistCategory.Warning, [
        { type: ChecklistItemType.Note, content: "Stick pusher active.", justification: Justification.Left },
        { type: ChecklistItemType.Challenge, content: "1. AOA", response: "REDUCE" },
        { type: ChecklistItemType.Challenge, content: "2. Thrust Lever", response: "T/O" },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        {
          type: ChecklistItemType.Note,
          content: "CAUTION: Do not attempt to overpower the stick pusher.",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content:
            "NOTE: If airspeed, altitude, power settings, and load factors are within normal limits, and there is no evidence of ice contamination, message should be considered a malfunction.",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Subtitle, content: "If message is determined to be a malfunction:" },
        {
          type: ChecklistItemType.Challenge,
          content: "a. Grip side stick firmly.",
          response: null,
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "b. AP DISC Button",
          response: "PRESS AND HOLD",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "c. Airplane Control",
          response: "MAINTAIN",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "d. AP SERVOS CB (A3)",
          response: "PULL",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "e. AP DISC Button",
          response: "RELEASE",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "f. STICK SHAKER CB (B3)",
          response: "PULL",
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Subtitle, content: "If in RVSM airspace:", justification: Justification.Indent1 },
        {
          type: ChecklistItemType.Challenge,
          content: "(1) Airplane Control",
          response: "MAINTAIN",
          justification: Justification.Indent2,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "(2) Exit RVSM airspace.",
          response: null,
          justification: Justification.Indent2,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "g. Airspeed",
          response: "MAINTAIN ABOVE 1.3 VS",
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "h. Avoid stalls, low airspeed, and uncoordinated or abrupt control inputs.",
          response: null,
          justification: Justification.Indent1,
        },
        {
          type: ChecklistItemType.Challenge,
          content: "i. Land as soon as practicable.",
          response: null,
          justification: Justification.Indent1,
        },
        { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        { type: ChecklistItemType.Note, content: "VREF Speeds (KIAS)", justification: Justification.Left },
        {
          type: ChecklistItemType.Note,
          content: "-------------------------------------",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "FLAPS....4000lb 4500lb 5000lb 5550lb 6000lb",
          justification: Justification.Left,
        },
        {
          type: ChecklistItemType.Note,
          content: "-------------------------------------",
          justification: Justification.Left,
        },
        { type: ChecklistItemType.Note, content: "UP or", justification: Justification.Left },
        {
          type: ChecklistItemType.Note,
          content: "UNKNOWN....89....95....100.......104.....109",
          interactionType: ChecklistItemInteractionType.ScrollStop,
        },
        { type: ChecklistItemType.Note, content: "UP (Ice", justification: Justification.Left },
        { type: ChecklistItemType.Note, content: "Contamin.", justification: Justification.Left },
        {
          type: ChecklistItemType.Note,
          content: "Airframe)....115....122...128.......135.....140",
          interactionType: ChecklistItemInteractionType.ScrollStop,
        },
        {
          type: ChecklistItemType.Note,
          content: "50%...........82.....87.....91..........96.....100",
          interactionType: ChecklistItemInteractionType.ScrollStop,
        },
        { type: ChecklistItemType.Note, content: "50% (Ice", justification: Justification.Left },
        { type: ChecklistItemType.Note, content: "Contamin.", justification: Justification.Left },
        {
          type: ChecklistItemType.Note,
          content: "Airframe).....98....104...110......115.....120",
          interactionType: ChecklistItemInteractionType.ScrollStop,
        },
        {
          type: ChecklistItemType.Note,
          content: "100%..........71.....76.....81.........85......89",
          interactionType: ChecklistItemInteractionType.ScrollStop,
        },
      ]),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.TAKEOFFPITCHTRIMWarning,
        VisionJetChecklistCategory.Warning,
        [
          {
            type: ChecklistItemType.Note,
            content: "Pitch trim not in takeoff configuration.",
            justification: Justification.Left,
          },
          { type: ChecklistItemType.Subtitle, content: "On ground only:" },
          { type: ChecklistItemType.Challenge, content: "1. Takeoff", response: "ABORT" },
          { type: ChecklistItemType.Challenge, content: "2. Pitch Trim", response: "ADJUST TO TAKEOFF (GREEN BAND)" },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.THRLEVERCALIBRATIONWarning,
        VisionJetChecklistCategory.Warning,
        [
          { type: ChecklistItemType.Note, content: "FADEC is in TLA rigging mode.", justification: Justification.Left },
          { type: ChecklistItemType.Subtitle, content: "On ground only:" },
          { type: ChecklistItemType.Challenge, content: "1. Do not dispatch.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
      ),
      new VisionJetChecklist(
        VisionJetWarningChecklistNames.TT2OVERHEATWarning,
        VisionJetChecklistCategory.Warning,
        [
          { type: ChecklistItemType.Note, content: "TT2 probes pending overheat.", justification: Justification.Left },
          { type: ChecklistItemType.Challenge, content: "1. ENG. IPS Switch", response: "OFF" },
          { type: ChecklistItemType.Challenge, content: "2. Avoid/exit icing conditions.", response: null },
          { type: ChecklistItemType.Note, content: "Procedure Complete", justification: Justification.Left },
        ],
        true,
      ),
    ];
  }
}
